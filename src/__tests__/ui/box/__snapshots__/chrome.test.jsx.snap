// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chrome adds the auto-height class when forceAutoHeight UI prop is true 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper auto-height"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div>
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is a success message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="success"
            />
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "There is an error",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="error"
            />
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is an information message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="info"
            />
          </div>
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;

exports[`Chrome can dislay all global messages together 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div>
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is a success message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="success"
            />
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "There is an error",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="error"
            />
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is an information message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="info"
            />
          </div>
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;

exports[`Chrome renders correctly when there is a global information message 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div>
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is an information message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="info"
            />
          </div>
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;

exports[`Chrome renders correctly when there is a global message 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div>
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "There is an error",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="error"
            />
          </div>
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;

exports[`Chrome renders correctly when there is a global success message 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div>
            <div
              data-__type="div"
              data-message={
                <span
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "This is a success message",
                    }
                  }
                />
              }
              data-scrollIntoView={true}
              data-type="success"
            />
          </div>
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;

exports[`Chrome renders correctly with basic props 1`] = `
<div
  className="auth0-lock-cred-pane auth0-lock-quiet"
>
  <div
    className="auth0-lock-cred-pane-internal-wrapper"
  >
    <div
      className="auth0-lock-content-wrapper"
    >
      <div
        data-__type="header"
        data-backHandler={undefined}
        data-backgroundColor="white"
        data-backgroundUrl="avatar"
        data-logoUrl="logo"
        data-name={undefined}
        data-title={undefined}
      />
      <div
        className="auth0-lock-content-body-wrapper"
        style={
          Object {
            "marginTop": 0,
          }
        }
      >
        <div>
          <div />
        </div>
        <div
          style={
            Object {
              "position": "relative",
            }
          }
        >
          <div
            data-__type="div"
            data-delay={550}
            data-onDidAppear={[Function]}
            data-onDidSlide={[Function]}
            data-onWillSlide={[Function]}
            data-reverse={false}
            data-transitionName=""
          >
            <div
              className="auth0-lock-view-content"
            >
              <div
                style={
                  Object {
                    "position": "relative",
                  }
                }
              >
                <div
                  className="auth0-lock-body-content"
                >
                  <div
                    className="auth0-lock-content"
                  >
                    <div
                      className="auth0-lock-form"
                    >
                      <div
                        data-__type="content"
                        data-focusSubmit={[Function]}
                        data-model={
                          Immutable.Map {
                            "id": "__lock_id__",
                          }
                        }
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <button
      aria-label="Submit"
      className="auth0-lock-submit"
      disabled={false}
      id="lock-submit"
      name="submit"
      onClick={[Function]}
      style={
        Object {
          "backgroundColor": "white",
          "display": "block",
        }
      }
      type="submit"
    >
      <div
        className="auth0-loading-container"
      >
        <div
          className="auth0-loading"
        />
      </div>
      <svg
        aria-hidden="true"
        focusable="false"
        height="42px"
        version="1.1"
        viewBox="0 0 43 42"
        width="43px"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
      >
        <g
          fill="none"
          fillRule="evenodd"
          id="Page-1"
          stroke="none"
          strokeWidth="1"
        >
          <g
            id="Lock"
            transform="translate(-280.000000, -3592.000000)"
          >
            <g
              id="SMS"
              transform="translate(153.000000, 3207.000000)"
            >
              <g
                id="Group"
              >
                <g
                  id="Login"
                  transform="translate(0.000000, 369.000000)"
                >
                  <g
                    id="Btn"
                  >
                    <g
                      id="Oval-302-+-Shape"
                      transform="translate(128.000000, 17.000000)"
                    >
                      <circle
                        cx="20.5"
                        cy="20"
                        id="Oval-302"
                        r="20"
                        stroke="#FFFFFF"
                        strokeWidth="2"
                      />
                      <path
                        d="M17.8,15.4 L19.2,14 L25.2,20 L19.2,26 L17.8,24.6 L22.4,20 L17.8,15.4 Z"
                        fill="#FFFFFF"
                        id="Shape"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
          </g>
        </g>
      </svg>
    </button>
  </div>
</div>
`;
