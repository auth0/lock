// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`initTenant() filters clientConnections 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": true,
        "allowSignup": true,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 1,
          },
        },
        "requireUsername": false,
        "strategy": "auth0",
        "type": "database",
        "validation": null,
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with database connection fixes validation when username.min > username.max 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": false,
        "allowSignup": false,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 1,
          },
        },
        "requireUsername": true,
        "strategy": "auth0",
        "type": "database",
        "validation": {
          "username": {
            "max": 15,
            "min": 1,
          },
        },
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with database connection fixes validation when values are not numbers 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": false,
        "allowSignup": false,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 1,
          },
        },
        "requireUsername": true,
        "strategy": "auth0",
        "type": "database",
        "validation": {
          "username": {
            "max": 15,
            "min": 1,
          },
        },
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with database connection maps connection correctly with all the properties 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": false,
        "allowSignup": false,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 1,
          },
        },
        "requireUsername": true,
        "strategy": "auth0",
        "type": "database",
        "validation": {
          "username": {
            "max": 5,
            "min": 4,
          },
        },
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with database connection maps connection correctly with defaults 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": true,
        "allowSignup": true,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 1,
          },
        },
        "requireUsername": false,
        "strategy": "auth0",
        "type": "database",
        "validation": null,
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with database connection maps password policy correctly 1`] = `
{
  "connections": {
    "database": [
      {
        "allowForgot": false,
        "allowSignup": false,
        "name": "test-connection-database",
        "passwordPolicy": {
          "length": {
            "minLength": 6,
          },
        },
        "requireUsername": true,
        "strategy": "auth0",
        "type": "database",
        "validation": {
          "passwordPolicy": "low",
          "username": {
            "max": 5,
            "min": 4,
          },
        },
      },
    ],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with enterprise connection maps connection correctly 1`] = `
{
  "connections": {
    "database": [],
    "enterprise": [
      {
        "domains": "domains",
        "name": "test-connection-enterprise",
        "strategy": "auth0",
        "type": "enterprise",
      },
    ],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with other connection types maps connection correctly 1`] = `
{
  "connections": {
    "database": [],
    "enterprise": [],
    "passwordless": [],
    "social": [
      {
        "name": "test-connection-other_type",
        "strategy": "auth0",
        "type": "social",
      },
    ],
    "unknown": [
      {
        "name": "??",
        "strategy": "??",
        "type": "unknown",
      },
    ],
  },
  "defaultDirectory": null,
}
`;

exports[`initTenant() with passwordless connection maps connection correctly 1`] = `
{
  "connections": {
    "database": [],
    "enterprise": [],
    "passwordless": [],
    "social": [],
    "unknown": [],
  },
  "defaultDirectory": null,
}
`;
