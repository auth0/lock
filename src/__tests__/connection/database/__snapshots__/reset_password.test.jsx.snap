// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResetPasswordScreen a custom connection resolver is being used copies the username to the email field if an email address was entered 1`] = `
<div
  data-__type="reset_password_pane"
  data-header={null}
  data-i18n={
    {
      "html": [MockFunction] {
        "calls": [
          [
            "forgotPasswordInstructions",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "str": [MockFunction] {
        "calls": [
          [
            "emailInputPlaceholder",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  data-lock={
    Immutable.Map {
      "id": "__lock-id__",
      "field": Immutable.Map {
        "username": Immutable.Map {
          "valid": true,
          "value": "test@test.com",
          "showInvalid": false,
        },
      },
    }
  }
/>
`;

exports[`ResetPasswordScreen a custom connection resolver is being used sets the email field to a blank value if username is not an email address 1`] = `
<div
  data-__type="reset_password_pane"
  data-header={null}
  data-i18n={
    {
      "html": [MockFunction] {
        "calls": [
          [
            "forgotPasswordInstructions",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "str": [MockFunction] {
        "calls": [
          [
            "emailInputPlaceholder",
          ],
        ],
        "results": [
          {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
  data-lock={
    Immutable.Map {
      "id": "__lock-id__",
      "field": Immutable.Map {
        "username": Immutable.Map {
          "valid": true,
          "value": "some-username",
          "showInvalid": false,
        },
      },
    }
  }
/>
`;

exports[`ResetPasswordScreen isSubmitDisabled returns false when \`isEnterpriseDomain\` is false 1`] = `
[
  "updateEntity",
  "lock",
  "id",
  "clearGlobalError",
]
`;

exports[`ResetPasswordScreen isSubmitDisabled returns true when \`isEnterpriseDomain\` is true 1`] = `
[
  "updateEntity",
  "lock",
  "id",
  "setGlobalError",
  "error,forgotPassword,enterprise_email",
]
`;
